@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");
:root {
  --lore-c-dark: #191813;
  --lore-c-faint: #c9c7b8;
  --lore-c-beige: #b5b3a4;
  --lore-c-tan: #444444;
  --lore-c-white: #ffffff;
  --lore-c-black: #000000;
  --lore-c-groove: #eeede0;
}

.theme-dark {
  --lore-c-dark: #c9c7b8;
  --lore-c-faint: #191813;
  --lore-c-beige: #444444;
  --lore-c-tan: #b5b3a4;
  --lore-c-white: #000000;
  --lore-c-black: #ffffff;
  --lore-c-groove: #11121f;
}

/* Global styles */
.window-app {
  font-family: "Roboto", sans-serif;
}

.rollable:hover, .rollable:focus {
  color: var(--lore-c-black);
  text-shadow: 0 0 10px red;
  cursor: pointer;
}

.grid,
.grid-2col {
  display: grid;
  grid-column: span 2/span 2;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 10px;
  margin: 10px 0;
  padding: 0;
}

.grid-3col {
  grid-column: span 3/span 3;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-4col {
  grid-column: span 4/span 4;
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.grid-5col {
  grid-column: span 5/span 5;
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.grid-6col {
  grid-column: span 6/span 6;
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.grid-7col {
  grid-column: span 7/span 7;
  grid-template-columns: repeat(7, minmax(0, 1fr));
}

.grid-8col {
  grid-column: span 8/span 8;
  grid-template-columns: repeat(8, minmax(0, 1fr));
}

.grid-9col {
  grid-column: span 9/span 9;
  grid-template-columns: repeat(9, minmax(0, 1fr));
}

.grid-10col {
  grid-column: span 10/span 10;
  grid-template-columns: repeat(10, minmax(0, 1fr));
}

.grid-11col {
  grid-column: span 11/span 11;
  grid-template-columns: repeat(11, minmax(0, 1fr));
}

.grid-12col {
  grid-column: span 12/span 12;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.grid-start-2 {
  grid-column-start: 2;
}

.grid-start-3 {
  grid-column-start: 3;
}

.grid-start-4 {
  grid-column-start: 4;
}

.grid-start-5 {
  grid-column-start: 5;
}

.grid-start-6 {
  grid-column-start: 6;
}

.grid-start-7 {
  grid-column-start: 7;
}

.grid-start-8 {
  grid-column-start: 8;
}

.grid-start-9 {
  grid-column-start: 9;
}

.grid-start-10 {
  grid-column-start: 10;
}

.grid-start-11 {
  grid-column-start: 11;
}

.grid-start-12 {
  grid-column-start: 12;
}

.grid-span-2 {
  grid-column-end: span 2;
}

.grid-span-3 {
  grid-column-end: span 3;
}

.grid-span-4 {
  grid-column-end: span 4;
}

.grid-span-5 {
  grid-column-end: span 5;
}

.grid-span-6 {
  grid-column-end: span 6;
}

.grid-span-7 {
  grid-column-end: span 7;
}

.grid-span-8 {
  grid-column-end: span 8;
}

.grid-span-9 {
  grid-column-end: span 9;
}

.grid-span-10 {
  grid-column-end: span 10;
}

.grid-span-11 {
  grid-column-end: span 11;
}

.grid-span-12 {
  grid-column-end: span 12;
}

.flex-group-center,
.flex-group-left,
.flex-group-right {
  justify-content: center;
  align-items: center;
  text-align: center;
}

.flex-group-left {
  justify-content: flex-start;
  text-align: left;
}

.flex-group-right {
  justify-content: flex-end;
  text-align: right;
}

.flexshrink {
  flex: 0;
}

.flex-between {
  justify-content: space-between;
}

.flexlarge {
  flex: 2;
}

.align-left {
  justify-content: flex-start;
  text-align: left;
}

.align-right {
  justify-content: flex-end;
  text-align: right;
}

.align-center {
  justify-content: center;
  text-align: center;
}

.lore-context-menu {
  position: absolute;
  z-index: 1000;
  border: 1px solid #888;
  padding: 4px 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1333333333);
  min-width: 120px;
  background-color: black;
}

.lore-context-menu-item {
  padding: 4px 16px;
  cursor: pointer;
}

.roll-formula {
  font-weight: bold;
  text-align: center;
}

.modifier-input-label {
  text-align: center;
  margin-right: 10px;
}

.modifier-input {
  width: 50px;
}

.lore-die {
  text-align: center;
  margin-top: 10px;
  /* Keep layout intact; only adjust colors to match Foundry */
  color: var(--color-text, inherit);
}

/* Theme roll chat cards to follow the current Foundry theme without changing layout */
.chat-message .message-content .dice-roll {
  color: var(--color-text, inherit);
}
.chat-message .message-content {
  /* Formula line and dividers use the theme's tab/border color */
}
.chat-message .message-content .dice-formula {
  color: var(--color-text-dark-5, #555);
  border-color: var(--color-tabs-border, #c9c7b8);
}
.chat-message .message-content {
  /* Result container and totals inherit themed text and borders */
}
.chat-message .message-content .dice-result {
  border-color: var(--color-tabs-border, #c9c7b8);
}
.chat-message .message-content .dice-total {
  color: var(--color-text, inherit);
  border-color: var(--color-tabs-border, #c9c7b8);
}
.chat-message .message-content {
  /* Tooltip sections (breakdowns) use themed border accents */
}
.chat-message .message-content .dice-tooltip,
.chat-message .message-content .dice-tooltip .tooltip-part {
  border-color: var(--color-tabs-border, #c9c7b8);
}

/* Styles limited to lore sheets */
.lore.application .window-content, .lore.window-app .window-content {
  padding: 0;
}
.lore .items-list,
.lore .items-list .item {
  width: 100%;
  margin: 0px;
  padding: 0px;
}
.lore .items-list .item .item-name {
  display: flex;
  align-items: center;
  gap: 8px;
  /* Let the name grow to fill remaining space */
  flex: 1 1 auto;
  min-width: 0; /* allow text to shrink/ellipsis within flex container */
  padding-left: 10px;
  padding-right: 10px;
}
.lore .items-list .item .item-image {
  flex: 0 0 auto;
}
.lore .items-list .item .item-image img {
  width: 24px;
  height: 24px;
  object-fit: cover;
  border: none;
}
.lore .items-list .items-header {
  background-color: var(--lore-c-faint);
  padding-top: 5px;
  padding-bottom: 5px;
  margin-bottom: 5px;
}
.lore {
  /* Collapsible behavior */
}
.lore .items-list > .items-header.is-collapsible {
  cursor: pointer;
  position: relative; /* allow ::before to be absolutely positioned */
}
.lore .items-list > .items-header.is-collapsible::before {
  font-size: 10px;
  opacity: 0.7;
  position: absolute; /* keep out of CSS grid flow so it doesn't create a new column/row */
  left: 6px;
  top: 50%;
  transform: translateY(-50%);
}
.lore {
  /* When a list is collapsed, hide all immediate children except the header.
     This covers normal rows (li.item) and grouped sublists (li.items-sublist),
     ensuring the Armor header collapses all its sub-lists. */
}
.lore .items-list.collapsed > li:not(.items-header) {
  display: none;
}
.lore .items-list .items-header .item-name {
  flex: 1 1 auto;
}
.lore .item-controls {
  gap: 4px;
  flex: 0 0 auto;
  padding-right: 1.25em;
}
.lore .items-list .item .item-formula {
  flex: 0 0 auto;
  margin-left: auto;
  padding-right: 1.25em;
  white-space: nowrap;
  color: var(--color-text-dark-5, #555);
}
.lore .items-list .items-header .item-formula {
  font-weight: 600;
  opacity: 0.9;
}
.lore {
  /* Weapons: enforce even columns with CSS grid */
}
.lore .items-list.items-weapons .items-header,
.lore .items-list.items-weapons .item {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr auto; /* Name | Roll | Mod | Range | Controls */
  align-items: center;
  column-gap: 8px;
}
.lore .items-list.items-weapons .item .item-name,
.lore .items-list.items-weapons .items-header .item-name {
  /* allow name to use the first grid column */
  min-width: 0;
}
.lore .items-list.items-weapons .item .item-formula,
.lore .items-list.items-weapons .items-header .item-formula,
.lore .items-list.items-weapons .item .item-mod,
.lore .items-list.items-weapons .item .item-range {
  padding-right: 0.5em;
  white-space: nowrap;
}
.lore .items-list.items-weapons .item .item-controls,
.lore .items-list.items-weapons .items-header .item-controls {
  justify-self: end;
  padding-right: 1.25em;
}
.lore {
  /* Empty state row inside lists */
}
.lore .items-list .item.empty .item-name {
  opacity: 0.7;
  font-style: italic;
}
.lore .item-sheet-header {
  width: 100%;
  display: flex;
  align-items: flex-start;
  gap: 12px;
}
.lore {
  /* Ensure item sheets use full-width content and are not placed in a grid */
}
.lore.item.application .window-content, .lore.item.window-app .window-content {
  display: block; /* revert any grid from actor layout */
}
.lore {
  /* Image + fields layout inside item header */
}
.lore .item-sheet-header .profile-img {
  flex: 0 0 auto;
  width: 64px;
  height: 64px;
  object-fit: cover;
  border: 1px solid var(--color-tabs-border);
}
.lore .item-sheet-header .header-fields {
  flex: 1 1 auto;
  min-width: 0; /* allow input to shrink as needed */
}
.lore .item-sheet-header .document-name {
  margin-bottom: 8px;
}
.lore .item-sheet-header .name-input {
  width: 100%;
  box-sizing: border-box;
}
.lore {
  /* Gear tab layout: make the List sub-tab scrollable */
}
.lore.actor {
  /* Allow Gear tab to use the default overflow from the base tab styling */
}
.lore.actor.application .window-content > .tab.gear, .lore.actor.window-app .window-content > .tab.gear {
  min-height: 0; /* ensure children can compute height properly */
  /* Prevent the outer tab from becoming the scroll container; we want the
     inner active sub-tab (List/Paper Doll) to own the scrollbar. */
  overflow: hidden;
}
.lore.actor {
  /* Only when the Gear tab is active, use flex to reserve space for sub-tabs + content */
}
.lore.actor.application .window-content > .tab.gear.active, .lore.actor.window-app .window-content > .tab.gear.active {
  display: flex;
  flex-direction: column;
}
.lore.actor {
  /* Sub-tabs header stays fixed at the top of Gear tab */
}
.lore.actor .tab.gear .tabs.sub-tabs {
  flex: 0 0 auto;
}
.lore.actor {
  /* Make the inner active sub-tab the scroll container */
}
.lore.actor .tab.gear .tab.active {
  flex: 1 1 auto;
  min-height: 0;
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
}
.lore .lore-sidebar {
  width: 160px;
  border-right: 1px solid var(--color-tabs-border);
}
.lore {
  /* Scope the sidebar grid layout to ACTOR sheets only to avoid affecting Item sheets */
}
.lore.actor.application .window-content, .lore.actor.window-app .window-content {
  display: grid;
  grid-template-columns: 160px 1fr; /* match .lore-sidebar width */
  /* Explicit rows prevent the first row (header) from expanding to the sidebar's height */
  grid-template-rows: auto auto minmax(0, 1fr); /* row 1: header, row 2: tabs, row 3: content */
  align-items: start;
}
.lore.actor.application .window-content > .lore-sidebar, .lore.actor.window-app .window-content > .lore-sidebar {
  grid-column: 1;
  grid-row: 1/-1;
}
.lore.actor.application .window-content > :not(.lore-sidebar), .lore.actor.window-app .window-content > :not(.lore-sidebar) {
  grid-column: 2;
}
.lore.actor.application .window-content > nav.tabs, .lore.actor.window-app .window-content > nav.tabs {
  grid-row: 2;
}
.lore.actor.application .window-content > .tab, .lore.actor.window-app .window-content > .tab {
  grid-row: 3;
  min-height: 0; /* Allow scrolling within the content area if needed */
  overflow: auto;
}
.lore.actor {
  /* Gear tab: the outer tab should not scroll; inner active sub-tab owns the scrollbar */
}
.lore.actor.application .window-content > .tab.gear, .lore.actor.window-app .window-content > .tab.gear {
  overflow: hidden;
}
.lore.actor {
  /* Ensure the active Gear sub-tab (List/Paper Doll) fills the space and scrolls */
}
.lore.actor .tab.gear .tab.active {
  height: 100%;
  min-height: 0;
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
}
.lore.actor {
  /* Even more specific target to win against any theme overrides */
}
.lore.actor.application .window-content > .tab.gear.active .tab.active, .lore.actor.window-app .window-content > .tab.gear.active .tab.active {
  height: 100%;
  min-height: 0;
  overflow-y: auto;
  overflow-x: hidden;
}
.lore .profile-img {
  width: 160px;
  height: 160px;
  object-fit: cover;
  border-bottom: 1px solid var(--color-tabs-border);
}
.lore .attributes {
  padding: 10px;
}
.lore .attribute {
  margin: 0px;
  height: 30px;
}
.lore .attribute-label {
  font-weight: bold;
  text-align: center;
  display: block;
}
.lore .stats-container {
  padding: 10px;
}
.lore .stat-container {
  padding: 0px;
}
.lore .stat-label {
  padding-right: 20px;
}
.lore .stat-input {
  width: 50px;
  text-align: center;
}
.lore.application .window-content > .sheet-header, .lore.window-app .window-content > .sheet-header {
  grid-row: 1;
  align-self: start; /* Don't stretch to row height */
}
.lore .name-input {
  border: none;
  border-right: 1px solid var(--color-tabs-border);
  border-radius: 0px;
  background: none;
  font-weight: bold;
  font-size: 1.5em;
  box-shadow: none;
  margin: none;
}
.lore .level-label {
  padding-right: 10px;
}
.lore .level-input {
  width: 50px;
  text-align: center;
}
.lore .quantity-input, .lore .cost-input, .lore .weight-input {
  width: 40px;
  text-align: center;
}
.lore .horizontal-line {
  width: 100%;
  height: 1px;
  background-color: var(--color-tabs-border);
  margin: 8px 0;
}
.lore .middle-header .wounds-container, .lore .middle-header .fatigue-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}
.lore .middle-header .wounds-label, .lore .middle-header .fatigue-label {
  font-weight: 600;
}
.lore .middle-header .wounds-content, .lore .middle-header .fatigue-content {
  display: flex;
  gap: 12px;
}
.lore .middle-header .condition-container {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 8px;
}
.lore .middle-header .condition-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2px; /* replaces inline margin-bottom on labels */
}
.lore .middle-header .wounds-content label,
.lore .middle-header .fatigue-content label,
.lore .middle-header .condition-item label {
  position: relative;
  display: inline-block;
}
.lore {
  /* Custom circle checkboxes: show hollow when unchecked, filled when checked */
}
.lore .middle-header .wounds-content label,
.lore .middle-header .fatigue-content label,
.lore .middle-header .condition-item label {
  /* Make the label the click target area */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  cursor: pointer;
}
.lore .middle-header input[type=checkbox] {
  position: absolute;
  inset: 0; /* stretch to label to keep keyboard focus and clicks */
  width: 100%;
  height: 100%;
  margin: 0;
  opacity: 0; /* hide native checkbox */
  cursor: pointer;
}
.lore .middle-header .custom-circle {
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  box-sizing: border-box;
  border: 2px solid var(--color-tabs-border);
  background-color: transparent; /* hollow by default */
  transition: background-color 120ms ease, border-color 120ms ease, transform 60ms ease;
  pointer-events: none; /* ensure clicks go to the label/input */
}
.lore {
  /* Filled when checked */
}
.lore .middle-header input[type=checkbox]:checked + .custom-circle {
  background-color: var(--lore-c-dark);
  border-color: var(--lore-c-dark);
}
.lore {
  /* Hover and active feedback */
}
.lore .middle-header label:hover .custom-circle {
  border-color: var(--lore-c-tan);
}
.lore .middle-header input[type=checkbox]:active + .custom-circle {
  transform: scale(0.95);
}
.lore {
  /* Focus visible for keyboard users */
}
.lore .middle-header input[type=checkbox]:focus-visible + .custom-circle {
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.25), 0 0 0 4px var(--lore-c-tan);
}
.lore {
  /* Disabled state if used */
}
.lore .middle-header input[type=checkbox]:disabled + .custom-circle {
  opacity: 0.5;
  cursor: not-allowed;
}
.lore .morale-label {
  display: block;
  width: 100%;
  text-align: center;
}
.lore .morale-slider-container {
  width: 100%;
  padding-left: 30px;
  padding-right: 30px;
  padding-bottom: 10px;
}
.lore {
  /* Morale slider + ticks */
}
.lore .morale-slider {
  position: relative;
}
.lore .morale-input {
  width: 100%;
}
.lore {
  /* Visual tick marks from -6 to 6 (13 steps) */
}
.lore .morale-ticks {
  position: absolute;
  left: 0;
  right: 0;
  height: 8px;
  bottom: -6px; /* a little below the slider */
  /* Evenly spaced ticks: one 1px line per step, tiled 12 times (12 intervals from -6 to 6) */
  background-image: linear-gradient(to right, var(--color-tabs-border) 1px, transparent 1px);
  background-size: 8.3333333333% 100%;
  background-repeat: repeat-x;
  background-position: left bottom;
  opacity: 0.6;
  pointer-events: none;
}
.lore {
  /* Ensure the rightmost edge also shows a tick */
}
.lore .morale-ticks::after {
  content: "";
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 1px;
  background-color: var(--color-tabs-border);
}
.lore .biography {
  padding: 10px;
}
.lore .biography-content {
  background: none;
  border: none;
}
